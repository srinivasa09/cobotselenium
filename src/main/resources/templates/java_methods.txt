 
	public void runTest(List<String> data, String callbackUrl,String jobid)
	{

		try {  
			setUp();
			test(data);
			tearDown();

			JsonObject response = Json.createObjectBuilder().
					add("jobId", jobid).add("status","Success").add("reason", "").
					build();
            driver.quit();
			sendExecutionStatus(callbackUrl,response.toString());

		} catch(Exception e) {
			e.printStackTrace();
			
			try
            {
            	driver.quit();
            } catch(Exception driverEx)
            {
            	driverEx.printStackTrace();
            }

			JsonObject response = Json.createObjectBuilder().
					add("jobId", jobid).add("status","Failed").add("reason", e.getMessage()).
					build();
			try {
				sendExecutionStatus(callbackUrl,response.toString());
			} catch(Exception ex) {
				ex.printStackTrace();
			}
		}
	}
        
        
     public void click(String locatorName, String elementId, java.util.List<String> data, int[] count)
     {
	    String type = getElementType(locatorName, elementId).getAttribute("type");
	    if (type != null && type.equals("radio")) {
			if (driver.findElements(By.xpath("//label[contains(.,'" + data.get(count[0]) + "')]/input[@type='radio'][@"
					+ locatorName + "='" + elementId + "']")).size() != 0) {
				driver.findElements(By.xpath("//label[contains(.,'" + data.get(count[0]++)
						+ "')]/input[@type='radio'][@" + locatorName + "='" + elementId + "']")).get(0).click();
			} else if (driver.findElements(By.xpath("//input[contains(.,'" + data.get(count[0]) + "')][@type='radio'][@"
					+ locatorName + "='" + elementId + "']")).size() != 0) {
				driver.findElements(By.xpath("//input[contains(.,'" + data.get(count[0]++) + "')][@type='radio'][@"
						+ locatorName + "='" + elementId + "']")).get(0).click();
			}
		} else if(type != null && type.equals("checkbox")) {
			if(driver.findElements(By.xpath("//label[contains(.,'" + data.get(count[0]) + "')]")).size() != 0) {
				driver.findElement(By.xpath("//label[contains(.,'" + data.get(count[0]++) + "')]")).click();
			} else if(driver.findElements(By.xpath("//input[contains(.,'" + data.get(count[0]) + "')]")).size() != 0) {
				driver.findElement(By.xpath("//input[contains(.,'" + data.get(count[0]++) + "')]")).click();
			}
	    } else {
			getElementType(locatorName, elementId).click();
		}
	}

	public WebElement getElementType(String locatorName, String elemeintID) {
		if (StringUtils.equals(locatorName, "name")) {
			return driver.findElement(By.name(elemeintID));
		} else if (StringUtils.equals(locatorName, "xpath")) {
			return driver.findElement(By.xpath(elemeintID));
		} else if (StringUtils.equals(locatorName, "cssSelector")) {
			return driver.findElement(By.cssSelector(elemeintID));
		} else if (StringUtils.equals(locatorName, "linkText")) {
			return driver.findElement(By.linkText(elemeintID));
		} else if (StringUtils.equals(locatorName, "partialLinkText")) {
			return driver.findElement(By.partialLinkText(elemeintID));
		} else if (StringUtils.equals(locatorName, "id")) {
			return driver.findElement(By.id(elemeintID));
		} else if (StringUtils.equals(locatorName, "class")) {
			return driver.findElement(By.className(elemeintID));
		}
		return null;
	}
     
    public static void sendExecutionStatus(String postUrl, String inputJson) throws Exception {

		URL url = new URL (postUrl);

		System.out.println(inputJson);

		HttpURLConnection con = (HttpURLConnection)url.openConnection();
		con.setRequestMethod("POST");

		con.setRequestProperty("Content-Type", "application/json; utf-8");
		con.setRequestProperty("Accept", "application/json");

		con.setDoOutput(true);

		try(OutputStream os = con.getOutputStream()){
	    	byte[] input = inputJson.getBytes("utf-8");
	    	os.write(input, 0, input.length);			
		}

		int code = con.getResponseCode();
		System.out.println(code);

		try(BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream(), "utf-8"))){
	    	StringBuilder response = new StringBuilder();
	    	String responseLine = null;
	    	while ((responseLine = br.readLine()) != null) {
				response.append(responseLine.trim());
	    	}
	    	System.out.println(response.toString());
		}
		catch(Exception e)
		{
	    	e.printStackTrace();
		}
    }
           